query GetRestaurant($id: Int!) {
  restaurantResult(id: $id) {
    __typename
    ... on Restaurant {
      id
      name
      description
      style
      rating
      image
      imageSm
      homePage
      dish {
        id
        name
        itemType
        description
        image
        price
        restaurant
        restaurantName
        vegetarian
        vegan
        glutenFree
      }
    }
    ... on RestaurantError {
      message
    }
  }
}

query GetAllRestaurants {
  restaurantsResult {
    __typename
    ... on Restaurants {
      restaurants {
        id
        name
        description
        style
        rating
        image
        imageSm
        homePage
      }
    }
    ... on RestaurantsError {
      message
    }
  }
}

query GetCart {
  getCartResult {
    __typename
    ... on Cart {
      items {
        id
        name
        itemType
        description
        image
        restaurant
        vegetarian
        vegan
        glutenFree
        count
      }
      totalCost
      totalCount
    }
    ... on CartError {
      message
    }
    ... on NotAuthorized {
      message
    }
  }
}

query GetVerifiedCartPrice($dishes: [DishInput!]) {
  verifiedTotalResult(dishes: $dishes) {
    __typename
    ... on VerifiedTotal {
      verifiedTotal
    }
    ... on VerifiedTotalError {
      message
    }
    ... on NotAuthorized {
      message
    }
  }
}

query GetStripeClientSecret {
  clientSecretResult {
    __typename
    ... on ClientSecret {
      clientSecret
    }
    ... on StripeError {
      type
      message
      docUrl
      statusCode
      requestId
    }
    ... on NotAuthorized {
      message
    }
  }
}

query GetStripePaymentMethods {
  paymentMethodsResult {
    __typename
    ... on PaymentMethods {
      paymentMethods {
        id
        billingDetails {
          address {
            city
            country
            line1
            line2
            postalCode
            state
          }
          email
          name
          phone
        }
        card {
          brand
          checks {
            addressLine1Check
            addressPostalCodeCheck
            cvcCheck
          }
          country
          expMonth
          expYear
          fingerprint
          funding
          generatedFrom
          last4
          networks {
            available
            preferred
          }
          threeDSecureUsage {
            supported
          }
          wallet
        }
        customer
        type
      }
    }
    ... on StripeError {
      type
      message
      docUrl
      statusCode
      requestId
    }
    ... on NotAuthorized {
      message
    }
  }
}

query GetCustomerTransactions {
  customerTransactionsResult {
    __typename
    ... on CustomerTransactions {
      object
      dataFormatted {
        id
        object
        amount
        application
        created
        currency
        customer
        description
        invoice
        livemode
        metadata {
          null
        }
        processing
        review
        shipping
        source
        status
        amountCapturable
        amountDetails {
          tip {
            amount
          }
        }
        amountReceived
        applicationFeeAmount
        automaticPaymentMethods
        canceledAt
        cancellationReason
        captureMethod
        clientSecret
        confirmationMethod
        lastPaymentError
        latestCharge
        nextAction
        onBehalfOf
        paymentMethod
        paymentMethodOptions {
          amountCapturable
          installments
          tip
          mandateOptions
          network
          requestThreeDSecure
        }
        paymentMethodTypes
        receiptEmail
        setupFutureUsage
        statementDescriptor
        statementDescriptorSuffix
        transferData
        transferGroup
        cardId
        cardType
        cardName
        expMonth
        expYear
        custId
      }
      hasMore
      url
    }
    ... on CustomerTransactionsError {
      message
    }
    ... on StripeError {
      message
    }
    ... on NotAuthorized {
      message
    }
  }
}
